{"version":3,"file":"static/webpack/static/development/pages/index.js.c37b816106b2b435dc4a.hot-update.js","sources":["webpack:///./components/Forms.js"],"sourcesContent":["const axios = require('axios');\nimport Canvas from './Canvas';\n\nclass CoordinatesForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      x1: 100,\n      y1: 0,\n      x2: 600,\n      y2: 0,\n      x3: 600,\n      y3: 300,\n      x4: 100,\n      y4: 300,\n     };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.postData = {\n      \"geometries\": [\n        [100, 100],\n        [500, 100],\n        [500, 500],\n        [100, 500]\n      ]\n    };\n  }\n\n  handleChange(event) {\n    const newState = {\n      x1: event.target.x1,\n      y1: event.target.y1,\n      x2: event.target.x2,\n      y2: event.target.y2,\n      x3: event.target.x3,\n      y3: event.target.y3,\n      x4: event.target.x4,\n      y4: event.target.y4,\n    };\n    this.setState(newState);\n    \n    this.postData = {\n      \"geometries\": [\n        [newState.x1, newState.y1],\n        [newState.x2, newState.y2],\n        [newState.x3, newState.y3],\n        [newState.x4, newState.y4],\n      ]\n    };\n\n    // return axios.post('http://localhost:4000/geometry', postData)\n    //   .then(function (res) {\n    //     const show = JSON.stringify(res.data);\n    //     return {\n    //       show: show\n    //     };\n    //   })\n    //   .catch(function (err) {\n    //     console.log(JSON.stringify(err));\n    //   });\n}\n\n  handleSubmit(event) {\n    alert('座標を入力しました！');\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div><Canvas data={this.postData} />\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          x1:\n          <input type=\"number\" value={this.state.x1} onChange={this.handleChange} min=\"0\" max=\"1000\" />\n        </label>\n        <label>\n          y1:\n          <input type=\"number\" value={this.state.y1} onChange={this.handleChange} min=\"0\" max=\"1000\" />\n        </label>\n        <label>\n          x2:\n          <input type=\"number\" value={this.state.x2} onChange={this.handleChange} min=\"0\" max=\"1000\" />\n        </label>\n        <label>\n          y2:\n          <input type=\"number\" value={this.state.y2} onChange={this.handleChange} min=\"0\" max=\"1000\" />\n        </label><br></br>\n        <label>\n          x3:\n          <input type=\"number\" value={this.state.x3} onChange={this.handleChange} min=\"0\" max=\"1000\" />\n        </label>\n        <label>\n          y3:\n          <input type=\"number\" value={this.state.y3} onChange={this.handleChange} min=\"0\" max=\"1000\" />\n        </label>\n        <label>\n          x4:\n          <input type=\"number\" value={this.state.x4} onChange={this.handleChange} min=\"0\" max=\"1000\" />\n        </label>\n        <label>\n          y4:\n          <input type=\"number\" value={this.state.y4} onChange={this.handleChange} min=\"0\" max=\"1000\" />\n        </label>\n\n        <input type=\"submit\" value=\"Submit\" />\n        <style jsx>{`\n        label {\n          text-decoration: none;\n          color: blue;\n          font-size: 16px;\n          margin: 10px;\n        }\n\n        input[type=submit] {\n          background-color: #4CAF50;\n          border: none;\n          color: white;\n          padding: 10px 10px;\n          text-decoration: none;\n          margin: 4px 2px;\n          cursor: pointer;\n        }\n      `}</style>\n      </form>\n    </div>\n    );\n  }\n}\n\nexport default CoordinatesForm;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AADA;AAdA;AAsBA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AADA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlCA;AAAA;AAAA;AAwDA;;;;AA3HA;AACA;AA6HA;;;;A","sourceRoot":""}