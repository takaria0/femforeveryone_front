{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/takashimac/Documents/Node.js/FEMForEveryone/femfront/pages/p/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/Layout';\nimport fetch from 'isomorphic-unfetch';\n\nvar axios = require('axios');\n\nvar Post = function Post(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.show.name), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.show.summary.replace(/<[/]?[pb]>/g, '')), __jsx(\"img\", {\n    src: props.show.image.medium,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var id;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          axios.post('http://localhost:4000/geometry', {\n            \"geometries\": [[1, 0], [1, 0.5], [0, 1.0], [0, 0.5]]\n          }).then(function (res) {\n            var show = res.json();\n            return {\n              show: show\n            };\n          })[\"catch\"](function (error) {\n            console.log(error);\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/takashimac/Documents/Node.js/FEMForEveryone/femfront/pages/p/[id].js"],"names":["Layout","fetch","axios","require","Post","props","show","name","summary","replace","image","medium","getInitialProps","context","id","query","post","then","res","json","error","console","log"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SAChB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,IAAN,CAAWC,IAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACC,IAAN,CAAWE,OAAX,CAAmBC,OAAnB,CAA2B,aAA3B,EAA0C,EAA1C,CAAJ,CAFF,EAGE;AAAK,IAAA,GAAG,EAAEJ,KAAK,CAACC,IAAN,CAAWI,KAAX,CAAiBC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADgB;AAAA,CAAlB;;AAQAP,IAAI,CAACQ,eAAL,GAAuB,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,UAAAA,EADa,GACND,OAAO,CAACE,KADF,CACbD,EADa;AAGrBZ,UAAAA,KAAK,CAACc,IAAN,CAAW,gCAAX,EAA6C;AAC3C,0BAAc,CACZ,CAAC,CAAD,EAAI,CAAJ,CADY,EAEZ,CAAC,CAAD,EAAI,GAAJ,CAFY,EAGZ,CAAC,CAAD,EAAI,GAAJ,CAHY,EAIZ,CAAC,CAAD,EAAI,GAAJ,CAJY;AAD6B,WAA7C,EAQCC,IARD,CAQM,UAAUC,GAAV,EAAe;AACnB,gBAAMZ,IAAI,GAAGY,GAAG,CAACC,IAAJ,EAAb;AACA,mBAAO;AAAEb,cAAAA,IAAI,EAAJA;AAAF,aAAP;AACD,WAXD,WAYO,UAAUc,KAAV,EAAiB;AACtBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,WAdD;;AAHqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAoBA,eAAehB,IAAf","sourcesContent":["import Layout from '../../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nconst axios = require('axios');\n\nconst Post = props => (\n  <Layout>\n    <h1>{props.show.name}</h1>\n    <p>{props.show.summary.replace(/<[/]?[pb]>/g, '')}</p>\n    <img src={props.show.image.medium} />\n  </Layout>\n);\n\nPost.getInitialProps = async function (context) {\n  const { id } = context.query;\n\n  axios.post('http://localhost:4000/geometry', {\n    \"geometries\": [\n      [1, 0],\n      [1, 0.5],\n      [0, 1.0],\n      [0, 0.5]\n    ]\n  })\n  .then(function (res) {\n    const show = res.json();\n    return { show };\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}